// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: airmobility/sdsp_a.proto

// プロダクト名：UAS AirMobility API
// パッケージ名：uas.airmobility.v3
// インタフェース名：uas.airmobility.v2.AirMobilityAPI

package airmobility

import (
	generic "github.com/ouranos-gex/ouranos-gex-api/proto_go/generic"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// エラーコード
type ErrorCode int32

const (
	ErrorCode_ErrorCode_UNSPECIFIED ErrorCode = 0
	ErrorCode_ErrorCode_Duplicate   ErrorCode = 1 // 重複
	ErrorCode_ErrorCode_AccessDeny  ErrorCode = 2 // アクセス権限なし
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "ErrorCode_UNSPECIFIED",
		1: "ErrorCode_Duplicate",
		2: "ErrorCode_AccessDeny",
	}
	ErrorCode_value = map[string]int32{
		"ErrorCode_UNSPECIFIED": 0,
		"ErrorCode_Duplicate":   1,
		"ErrorCode_AccessDeny":  2,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_airmobility_sdsp_a_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_airmobility_sdsp_a_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{0}
}

type PutObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//int64 object_id = 1 ; // 登録ID。0の場合は新規登録。User名が一致していない場合はエラー。
	Overwrite bool    `protobuf:"varint,1,opt,name=overwrite,proto3" json:"overwrite,omitempty"` // trueの場合は旧のデータを削除し入力の情報で上書き。falseの場合は入力の情報を追加、同じ空間IDであれば値を上書きする。
	Object    *Object `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *PutObjectRequest) Reset() {
	*x = PutObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airmobility_sdsp_a_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutObjectRequest) ProtoMessage() {}

func (x *PutObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_airmobility_sdsp_a_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutObjectRequest.ProtoReflect.Descriptor instead.
func (*PutObjectRequest) Descriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{0}
}

func (x *PutObjectRequest) GetOverwrite() bool {
	if x != nil {
		return x.Overwrite
	}
	return false
}

func (x *PutObjectRequest) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

type PutObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId int64     `protobuf:"varint,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"` // 登録ID
	Error    ErrorCode `protobuf:"varint,20,opt,name=error,proto3,enum=uas.airmobility.v3.ErrorCode" json:"error,omitempty"`
}

func (x *PutObjectResponse) Reset() {
	*x = PutObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airmobility_sdsp_a_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutObjectResponse) ProtoMessage() {}

func (x *PutObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airmobility_sdsp_a_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutObjectResponse.ProtoReflect.Descriptor instead.
func (*PutObjectResponse) Descriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{1}
}

func (x *PutObjectResponse) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *PutObjectResponse) GetError() ErrorCode {
	if x != nil {
		return x.Error
	}
	return ErrorCode_ErrorCode_UNSPECIFIED
}

// GetObject入力パラメータ定義
type GetObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId int64 `protobuf:"varint,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"` // 登録IDの空間ID属性値を得る
}

func (x *GetObjectRequest) Reset() {
	*x = GetObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airmobility_sdsp_a_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectRequest) ProtoMessage() {}

func (x *GetObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_airmobility_sdsp_a_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectRequest.ProtoReflect.Descriptor instead.
func (*GetObjectRequest) Descriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{2}
}

func (x *GetObjectRequest) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

type DeleteObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId int64 `protobuf:"varint,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"` // 登録ID。0の場合は新規登録。User名が一致していない場合はエラー。
}

func (x *DeleteObjectRequest) Reset() {
	*x = DeleteObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airmobility_sdsp_a_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteObjectRequest) ProtoMessage() {}

func (x *DeleteObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_airmobility_sdsp_a_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteObjectRequest.ProtoReflect.Descriptor instead.
func (*DeleteObjectRequest) Descriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteObjectRequest) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

type DeleteObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error ErrorCode `protobuf:"varint,20,opt,name=error,proto3,enum=uas.airmobility.v3.ErrorCode" json:"error,omitempty"`
}

func (x *DeleteObjectResponse) Reset() {
	*x = DeleteObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airmobility_sdsp_a_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteObjectResponse) ProtoMessage() {}

func (x *DeleteObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airmobility_sdsp_a_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteObjectResponse.ProtoReflect.Descriptor instead.
func (*DeleteObjectResponse) Descriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteObjectResponse) GetError() ErrorCode {
	if x != nil {
		return x.Error
	}
	return ErrorCode_ErrorCode_UNSPECIFIED
}

type GetValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Figure      *generic.SpatialFigure `protobuf:"bytes,1,opt,name=figure,proto3" json:"figure,omitempty"`                                                                         // 取得する領域
	RequestType []ObjectType           `protobuf:"varint,2,rep,packed,name=request_type,json=requestType,proto3,enum=uas.airmobility.v3.ObjectType" json:"request_type,omitempty"` // 取得するオブジェクトのタイプ。バリアへの対応はオプション。
}

func (x *GetValueRequest) Reset() {
	*x = GetValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airmobility_sdsp_a_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetValueRequest) ProtoMessage() {}

func (x *GetValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_airmobility_sdsp_a_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetValueRequest.ProtoReflect.Descriptor instead.
func (*GetValueRequest) Descriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{5}
}

func (x *GetValueRequest) GetFigure() *generic.SpatialFigure {
	if x != nil {
		return x.Figure
	}
	return nil
}

func (x *GetValueRequest) GetRequestType() []ObjectType {
	if x != nil {
		return x.RequestType
	}
	return nil
}

type GetValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*Objects `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	Error  ErrorCode  `protobuf:"varint,20,opt,name=error,proto3,enum=uas.airmobility.v3.ErrorCode" json:"error,omitempty"`
}

func (x *GetValueResponse) Reset() {
	*x = GetValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airmobility_sdsp_a_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetValueResponse) ProtoMessage() {}

func (x *GetValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airmobility_sdsp_a_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetValueResponse.ProtoReflect.Descriptor instead.
func (*GetValueResponse) Descriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{6}
}

func (x *GetValueResponse) GetValues() []*Objects {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *GetValueResponse) GetError() ErrorCode {
	if x != nil {
		return x.Error
	}
	return ErrorCode_ErrorCode_UNSPECIFIED
}

type PutReserveAreaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId  int64                    `protobuf:"varint,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"` // 登録ID。0の場合は新規登録。User名が一致していない場合はエラー。
	Overwrite bool                     `protobuf:"varint,2,opt,name=overwrite,proto3" json:"overwrite,omitempty"`               // trueの場合は旧のデータを削除し入力の情報で上書き。falseの場合は入力の情報を追加、同じ空間IDであれば値を上書きする。
	Area      []*VoxelValueReserveArea `protobuf:"bytes,3,rep,name=area,proto3" json:"area,omitempty"`                          // 設定するエリア。
}

func (x *PutReserveAreaRequest) Reset() {
	*x = PutReserveAreaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airmobility_sdsp_a_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutReserveAreaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutReserveAreaRequest) ProtoMessage() {}

func (x *PutReserveAreaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_airmobility_sdsp_a_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutReserveAreaRequest.ProtoReflect.Descriptor instead.
func (*PutReserveAreaRequest) Descriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{7}
}

func (x *PutReserveAreaRequest) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *PutReserveAreaRequest) GetOverwrite() bool {
	if x != nil {
		return x.Overwrite
	}
	return false
}

func (x *PutReserveAreaRequest) GetArea() []*VoxelValueReserveArea {
	if x != nil {
		return x.Area
	}
	return nil
}

type PutReserveAreaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId int64     `protobuf:"varint,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"` // 登録ID
	Error    ErrorCode `protobuf:"varint,20,opt,name=error,proto3,enum=uas.airmobility.v3.ErrorCode" json:"error,omitempty"`
}

func (x *PutReserveAreaResponse) Reset() {
	*x = PutReserveAreaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airmobility_sdsp_a_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutReserveAreaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutReserveAreaResponse) ProtoMessage() {}

func (x *PutReserveAreaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airmobility_sdsp_a_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutReserveAreaResponse.ProtoReflect.Descriptor instead.
func (*PutReserveAreaResponse) Descriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{8}
}

func (x *PutReserveAreaResponse) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *PutReserveAreaResponse) GetError() ErrorCode {
	if x != nil {
		return x.Error
	}
	return ErrorCode_ErrorCode_UNSPECIFIED
}

type SelectObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area                []*generic.SpatialFigure `protobuf:"bytes,1,rep,name=area,proto3" json:"area,omitempty"`                                                              // 指定エリア。
	Type                ObjectType               `protobuf:"varint,2,opt,name=type,proto3,enum=uas.airmobility.v3.ObjectType" json:"type,omitempty"`                          // 取得する地物の種類。バリアへの対応はオプション。
	WithForecastWeather bool                     `protobuf:"varint,10,opt,name=with_forecast_weather,json=withForecastWeather,proto3" json:"with_forecast_weather,omitempty"` // 天気予報情報を取得する
	WithCurrentWeather  bool                     `protobuf:"varint,11,opt,name=with_current_weather,json=withCurrentWeather,proto3" json:"with_current_weather,omitempty"`    // 現在の天候情報を取得する
	PlmnId              *string                  `protobuf:"bytes,12,opt,name=plmn_id,json=plmnId,proto3,oneof" json:"plmn_id,omitempty"`                                     // 指定したキャリアの電波強度を取得する
}

func (x *SelectObjectRequest) Reset() {
	*x = SelectObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airmobility_sdsp_a_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectObjectRequest) ProtoMessage() {}

func (x *SelectObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_airmobility_sdsp_a_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectObjectRequest.ProtoReflect.Descriptor instead.
func (*SelectObjectRequest) Descriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{9}
}

func (x *SelectObjectRequest) GetArea() []*generic.SpatialFigure {
	if x != nil {
		return x.Area
	}
	return nil
}

func (x *SelectObjectRequest) GetType() ObjectType {
	if x != nil {
		return x.Type
	}
	return ObjectType_OBJECT_TYPE_UNSPECIFIED
}

func (x *SelectObjectRequest) GetWithForecastWeather() bool {
	if x != nil {
		return x.WithForecastWeather
	}
	return false
}

func (x *SelectObjectRequest) GetWithCurrentWeather() bool {
	if x != nil {
		return x.WithCurrentWeather
	}
	return false
}

func (x *SelectObjectRequest) GetPlmnId() string {
	if x != nil && x.PlmnId != nil {
		return *x.PlmnId
	}
	return ""
}

type SelectObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId []*SelectObjectResponse_FlyableArea `protobuf:"bytes,1,rep,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *SelectObjectResponse) Reset() {
	*x = SelectObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airmobility_sdsp_a_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectObjectResponse) ProtoMessage() {}

func (x *SelectObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airmobility_sdsp_a_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectObjectResponse.ProtoReflect.Descriptor instead.
func (*SelectObjectResponse) Descriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{10}
}

func (x *SelectObjectResponse) GetObjectId() []*SelectObjectResponse_FlyableArea {
	if x != nil {
		return x.ObjectId
	}
	return nil
}

// DeleteRequest入力パラメータ定義
// ユーザ追加は要素番号30以降を利用すること
type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId []int64 `protobuf:"varint,1,rep,packed,name=object_id,json=objectId,proto3" json:"object_id,omitempty"` // リクエストしたUserIDが登録したUserIDと不一致の場合はエラー。
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airmobility_sdsp_a_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_airmobility_sdsp_a_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteRequest) GetObjectId() []int64 {
	if x != nil {
		return x.ObjectId
	}
	return nil
}

// SelectAirspaceArrangement入力パラメータ定義
// ユーザ追加は要素番号30以降を利用すること
type SelectAirspaceArrangementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Figure             *generic.SpatialFigure `protobuf:"bytes,1,opt,name=figure,proto3" json:"figure,omitempty"`                                                      // 取得する領域
	Period             *generic.Period        `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty"`                                                      // 取得する時間帯
	IncludeReserveArea bool                   `protobuf:"varint,3,opt,name=include_reserve_area,json=includeReserveArea,proto3" json:"include_reserve_area,omitempty"` // trueで飛行計画で予約されたエリアやルートも除外する。trueへの対応はオプショナル。
}

func (x *SelectAirspaceArrangementRequest) Reset() {
	*x = SelectAirspaceArrangementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airmobility_sdsp_a_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectAirspaceArrangementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectAirspaceArrangementRequest) ProtoMessage() {}

func (x *SelectAirspaceArrangementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_airmobility_sdsp_a_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectAirspaceArrangementRequest.ProtoReflect.Descriptor instead.
func (*SelectAirspaceArrangementRequest) Descriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{12}
}

func (x *SelectAirspaceArrangementRequest) GetFigure() *generic.SpatialFigure {
	if x != nil {
		return x.Figure
	}
	return nil
}

func (x *SelectAirspaceArrangementRequest) GetPeriod() *generic.Period {
	if x != nil {
		return x.Period
	}
	return nil
}

func (x *SelectAirspaceArrangementRequest) GetIncludeReserveArea() bool {
	if x != nil {
		return x.IncludeReserveArea
	}
	return false
}

type SelectAirspaceArrangementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutOfSpace   *generic.SpatialIdentifications `protobuf:"bytes,1,opt,name=out_of_space,json=outOfSpace,proto3" json:"out_of_space,omitempty"`     // 当該SDSP_UASの管理外の領域およびオーバーレイ領域
	FlyableSpace *generic.SpatialIdentifications `protobuf:"bytes,2,opt,name=flyable_space,json=flyableSpace,proto3" json:"flyable_space,omitempty"` // 飛行許容領域
	Error        ErrorCode                       `protobuf:"varint,20,opt,name=error,proto3,enum=uas.airmobility.v3.ErrorCode" json:"error,omitempty"`
}

func (x *SelectAirspaceArrangementResponse) Reset() {
	*x = SelectAirspaceArrangementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airmobility_sdsp_a_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectAirspaceArrangementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectAirspaceArrangementResponse) ProtoMessage() {}

func (x *SelectAirspaceArrangementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_airmobility_sdsp_a_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectAirspaceArrangementResponse.ProtoReflect.Descriptor instead.
func (*SelectAirspaceArrangementResponse) Descriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{13}
}

func (x *SelectAirspaceArrangementResponse) GetOutOfSpace() *generic.SpatialIdentifications {
	if x != nil {
		return x.OutOfSpace
	}
	return nil
}

func (x *SelectAirspaceArrangementResponse) GetFlyableSpace() *generic.SpatialIdentifications {
	if x != nil {
		return x.FlyableSpace
	}
	return nil
}

func (x *SelectAirspaceArrangementResponse) GetError() ErrorCode {
	if x != nil {
		return x.Error
	}
	return ErrorCode_ErrorCode_UNSPECIFIED
}

type AirspaceArrangement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Information:
	//	*AirspaceArrangement_OutOfSpace
	//	*AirspaceArrangement_FlyableSpace
	//	*AirspaceArrangement_OccupiedSpace
	//	*AirspaceArrangement_Error
	Information isAirspaceArrangement_Information `protobuf_oneof:"information"`
}

func (x *AirspaceArrangement) Reset() {
	*x = AirspaceArrangement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airmobility_sdsp_a_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirspaceArrangement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirspaceArrangement) ProtoMessage() {}

func (x *AirspaceArrangement) ProtoReflect() protoreflect.Message {
	mi := &file_airmobility_sdsp_a_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirspaceArrangement.ProtoReflect.Descriptor instead.
func (*AirspaceArrangement) Descriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{14}
}

func (m *AirspaceArrangement) GetInformation() isAirspaceArrangement_Information {
	if m != nil {
		return m.Information
	}
	return nil
}

func (x *AirspaceArrangement) GetOutOfSpace() *generic.SpatialIdentifications {
	if x, ok := x.GetInformation().(*AirspaceArrangement_OutOfSpace); ok {
		return x.OutOfSpace
	}
	return nil
}

func (x *AirspaceArrangement) GetFlyableSpace() *generic.SpatialIdentifications {
	if x, ok := x.GetInformation().(*AirspaceArrangement_FlyableSpace); ok {
		return x.FlyableSpace
	}
	return nil
}

func (x *AirspaceArrangement) GetOccupiedSpace() *generic.SpatialIdentifications {
	if x, ok := x.GetInformation().(*AirspaceArrangement_OccupiedSpace); ok {
		return x.OccupiedSpace
	}
	return nil
}

func (x *AirspaceArrangement) GetError() ErrorCode {
	if x, ok := x.GetInformation().(*AirspaceArrangement_Error); ok {
		return x.Error
	}
	return ErrorCode_ErrorCode_UNSPECIFIED
}

type isAirspaceArrangement_Information interface {
	isAirspaceArrangement_Information()
}

type AirspaceArrangement_OutOfSpace struct {
	OutOfSpace *generic.SpatialIdentifications `protobuf:"bytes,1,opt,name=out_of_space,json=outOfSpace,proto3,oneof"` // 当該SDSP_UASの管理外の領域およびオーバーレイ領域
}

type AirspaceArrangement_FlyableSpace struct {
	FlyableSpace *generic.SpatialIdentifications `protobuf:"bytes,2,opt,name=flyable_space,json=flyableSpace,proto3,oneof"` // 指定範囲内の飛行許容領域。領域が変化し増えた場合は追加領域のみ通知。
}

type AirspaceArrangement_OccupiedSpace struct {
	OccupiedSpace *generic.SpatialIdentifications `protobuf:"bytes,3,opt,name=occupied_space,json=occupiedSpace,proto3,oneof"` // 飛行許容領域から閉塞領域に変更された領域
}

type AirspaceArrangement_Error struct {
	Error ErrorCode `protobuf:"varint,20,opt,name=error,proto3,enum=uas.airmobility.v3.ErrorCode,oneof"`
}

func (*AirspaceArrangement_OutOfSpace) isAirspaceArrangement_Information() {}

func (*AirspaceArrangement_FlyableSpace) isAirspaceArrangement_Information() {}

func (*AirspaceArrangement_OccupiedSpace) isAirspaceArrangement_Information() {}

func (*AirspaceArrangement_Error) isAirspaceArrangement_Information() {}

type SelectObjectResponse_FlyableArea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *generic.SpatialIdentification      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                      // 空間ID
	CurrentWeather *VoxelValueWeather_CurrentWeather   `protobuf:"bytes,10,opt,name=current_weather,json=currentWeather,proto3,oneof" json:"current_weather,omitempty"` // 現況
	Forecast       *VoxelValueWeatherForecast_Forecast `protobuf:"bytes,11,opt,name=forecast,proto3,oneof" json:"forecast,omitempty"`                                   // 予報
	MobileNetwork  *VoxelValueWMobileNetwork           `protobuf:"bytes,12,opt,name=mobile_network,json=mobileNetwork,proto3,oneof" json:"mobile_network,omitempty"`    // 電波強度
}

func (x *SelectObjectResponse_FlyableArea) Reset() {
	*x = SelectObjectResponse_FlyableArea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_airmobility_sdsp_a_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectObjectResponse_FlyableArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectObjectResponse_FlyableArea) ProtoMessage() {}

func (x *SelectObjectResponse_FlyableArea) ProtoReflect() protoreflect.Message {
	mi := &file_airmobility_sdsp_a_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectObjectResponse_FlyableArea.ProtoReflect.Descriptor instead.
func (*SelectObjectResponse_FlyableArea) Descriptor() ([]byte, []int) {
	return file_airmobility_sdsp_a_proto_rawDescGZIP(), []int{10, 0}
}

func (x *SelectObjectResponse_FlyableArea) GetId() *generic.SpatialIdentification {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SelectObjectResponse_FlyableArea) GetCurrentWeather() *VoxelValueWeather_CurrentWeather {
	if x != nil {
		return x.CurrentWeather
	}
	return nil
}

func (x *SelectObjectResponse_FlyableArea) GetForecast() *VoxelValueWeatherForecast_Forecast {
	if x != nil {
		return x.Forecast
	}
	return nil
}

func (x *SelectObjectResponse_FlyableArea) GetMobileNetwork() *VoxelValueWMobileNetwork {
	if x != nil {
		return x.MobileNetwork
	}
	return nil
}

var File_airmobility_sdsp_a_proto protoreflect.FileDescriptor

var file_airmobility_sdsp_a_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x73, 0x64,
	0x73, 0x70, 0x5f, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x75, 0x61, 0x73, 0x2e,
	0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x1a, 0x1a,
	0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x2f, 0x73, 0x64, 0x73, 0x70, 0x5f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x64, 0x0a, 0x10, 0x50, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x65, 0x0a, 0x11, 0x50, 0x75, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69,
	0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2f, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x32,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x22, 0x4b, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x75, 0x61, 0x73, 0x2e,
	0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x87, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x2e, 0x76, 0x33,
	0x2e, 0x53, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x46, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x06,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x75,
	0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x33, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7c, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x33, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x50, 0x75, 0x74, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x04,
	0x61, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x75, 0x61, 0x73,
	0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e,
	0x56, 0x6f, 0x78, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x41, 0x72, 0x65, 0x61, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x22, 0x6a, 0x0a, 0x16, 0x50,
	0x75, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x88, 0x02, 0x0a, 0x13, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x70, 0x61, 0x74, 0x69,
	0x61, 0x6c, 0x46, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x32,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x75,
	0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x33, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x77, 0x69, 0x74, 0x68, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x57,
	0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x77, 0x69, 0x74, 0x68, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x07, 0x70, 0x6c, 0x6d, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x70, 0x6c, 0x6d,
	0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x6c, 0x6d, 0x6e, 0x5f,
	0x69, 0x64, 0x22, 0xf7, 0x03, 0x0a, 0x14, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x09, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x33, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x6c, 0x79, 0x61, 0x62, 0x6c, 0x65,
	0x41, 0x72, 0x65, 0x61, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x1a, 0x8b,
	0x03, 0x0a, 0x0b, 0x46, 0x6c, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x31,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x62, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x75, 0x61, 0x73,
	0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e,
	0x56, 0x6f, 0x78, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x57, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69,
	0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x56, 0x6f, 0x78,
	0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x48,
	0x01, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x58,
	0x0a, 0x0e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x56, 0x6f, 0x78, 0x65,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x57, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x48, 0x02, 0x52, 0x0d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x2c, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x20, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x69, 0x72, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x72, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x31, 0x0a, 0x06, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x70, 0x61,
	0x74, 0x69, 0x61, 0x6c, 0x46, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x06, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x2e, 0x76, 0x33, 0x2e,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x30,
	0x0a, 0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x72, 0x65, 0x61,
	0x22, 0xe7, 0x01, 0x0a, 0x21, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x69, 0x72, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x66,
	0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x70, 0x61, 0x74, 0x69, 0x61,
	0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0a, 0x6f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0d,
	0x66, 0x6c, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x2e, 0x76, 0x33,
	0x2e, 0x53, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x66, 0x6c, 0x79, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xbb, 0x02, 0x0a, 0x13, 0x41,
	0x69, 0x72, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x46, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0a,
	0x6f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x66, 0x6c,
	0x79, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x53,
	0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x6c, 0x79, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65,
	0x64, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x70, 0x61, 0x74, 0x69,
	0x61, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x48, 0x00, 0x52, 0x0d, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x59, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x17, 0x0a, 0x13, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x44, 0x75,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6e,
	0x79, 0x10, 0x02, 0x32, 0xf5, 0x05, 0x0a, 0x0e, 0x41, 0x69, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x41, 0x50, 0x49, 0x12, 0x5a, 0x0a, 0x09, 0x50, 0x75, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x75, 0x61, 0x73, 0x2e,
	0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x50,
	0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x51, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x24, 0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x63, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x27, 0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x33, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x75, 0x61,
	0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x00, 0x30, 0x01, 0x12, 0x69, 0x0a, 0x0e,
	0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x29,
	0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x33, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x72,
	0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x75, 0x61, 0x73, 0x2e,
	0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x50,
	0x75, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x41, 0x69, 0x72, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x41, 0x69, 0x72, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x75, 0x61,
	0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x69, 0x72, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41,
	0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x1f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41,
	0x69, 0x72, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x34, 0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61,
	0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x41, 0x69, 0x72, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x72, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x75, 0x61, 0x73, 0x2e, 0x61, 0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x33, 0x2e, 0x41, 0x69, 0x72, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x72, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x42, 0x3d, 0x5a, 0x3b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x75, 0x72, 0x61, 0x6e, 0x6f,
	0x73, 0x2d, 0x67, 0x65, 0x78, 0x2f, 0x6f, 0x75, 0x72, 0x61, 0x6e, 0x6f, 0x73, 0x2d, 0x67, 0x65,
	0x78, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x6f, 0x2f, 0x61,
	0x69, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_airmobility_sdsp_a_proto_rawDescOnce sync.Once
	file_airmobility_sdsp_a_proto_rawDescData = file_airmobility_sdsp_a_proto_rawDesc
)

func file_airmobility_sdsp_a_proto_rawDescGZIP() []byte {
	file_airmobility_sdsp_a_proto_rawDescOnce.Do(func() {
		file_airmobility_sdsp_a_proto_rawDescData = protoimpl.X.CompressGZIP(file_airmobility_sdsp_a_proto_rawDescData)
	})
	return file_airmobility_sdsp_a_proto_rawDescData
}

var file_airmobility_sdsp_a_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_airmobility_sdsp_a_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_airmobility_sdsp_a_proto_goTypes = []interface{}{
	(ErrorCode)(0),                             // 0: uas.airmobility.v3.ErrorCode
	(*PutObjectRequest)(nil),                   // 1: uas.airmobility.v3.PutObjectRequest
	(*PutObjectResponse)(nil),                  // 2: uas.airmobility.v3.PutObjectResponse
	(*GetObjectRequest)(nil),                   // 3: uas.airmobility.v3.GetObjectRequest
	(*DeleteObjectRequest)(nil),                // 4: uas.airmobility.v3.DeleteObjectRequest
	(*DeleteObjectResponse)(nil),               // 5: uas.airmobility.v3.DeleteObjectResponse
	(*GetValueRequest)(nil),                    // 6: uas.airmobility.v3.GetValueRequest
	(*GetValueResponse)(nil),                   // 7: uas.airmobility.v3.GetValueResponse
	(*PutReserveAreaRequest)(nil),              // 8: uas.airmobility.v3.PutReserveAreaRequest
	(*PutReserveAreaResponse)(nil),             // 9: uas.airmobility.v3.PutReserveAreaResponse
	(*SelectObjectRequest)(nil),                // 10: uas.airmobility.v3.SelectObjectRequest
	(*SelectObjectResponse)(nil),               // 11: uas.airmobility.v3.SelectObjectResponse
	(*DeleteRequest)(nil),                      // 12: uas.airmobility.v3.DeleteRequest
	(*SelectAirspaceArrangementRequest)(nil),   // 13: uas.airmobility.v3.SelectAirspaceArrangementRequest
	(*SelectAirspaceArrangementResponse)(nil),  // 14: uas.airmobility.v3.SelectAirspaceArrangementResponse
	(*AirspaceArrangement)(nil),                // 15: uas.airmobility.v3.AirspaceArrangement
	(*SelectObjectResponse_FlyableArea)(nil),   // 16: uas.airmobility.v3.SelectObjectResponse.FlyableArea
	(*Object)(nil),                             // 17: uas.airmobility.v3.Object
	(*generic.SpatialFigure)(nil),              // 18: generic.v3.SpatialFigure
	(ObjectType)(0),                            // 19: uas.airmobility.v3.ObjectType
	(*Objects)(nil),                            // 20: uas.airmobility.v3.Objects
	(*VoxelValueReserveArea)(nil),              // 21: uas.airmobility.v3.VoxelValueReserveArea
	(*generic.Period)(nil),                     // 22: generic.v3.Period
	(*generic.SpatialIdentifications)(nil),     // 23: generic.v3.SpatialIdentifications
	(*generic.SpatialIdentification)(nil),      // 24: generic.v3.SpatialIdentification
	(*VoxelValueWeather_CurrentWeather)(nil),   // 25: uas.airmobility.v3.VoxelValueWeather.CurrentWeather
	(*VoxelValueWeatherForecast_Forecast)(nil), // 26: uas.airmobility.v3.VoxelValueWeatherForecast.Forecast
	(*VoxelValueWMobileNetwork)(nil),           // 27: uas.airmobility.v3.VoxelValueWMobileNetwork
}
var file_airmobility_sdsp_a_proto_depIdxs = []int32{
	17, // 0: uas.airmobility.v3.PutObjectRequest.object:type_name -> uas.airmobility.v3.Object
	0,  // 1: uas.airmobility.v3.PutObjectResponse.error:type_name -> uas.airmobility.v3.ErrorCode
	0,  // 2: uas.airmobility.v3.DeleteObjectResponse.error:type_name -> uas.airmobility.v3.ErrorCode
	18, // 3: uas.airmobility.v3.GetValueRequest.figure:type_name -> generic.v3.SpatialFigure
	19, // 4: uas.airmobility.v3.GetValueRequest.request_type:type_name -> uas.airmobility.v3.ObjectType
	20, // 5: uas.airmobility.v3.GetValueResponse.values:type_name -> uas.airmobility.v3.Objects
	0,  // 6: uas.airmobility.v3.GetValueResponse.error:type_name -> uas.airmobility.v3.ErrorCode
	21, // 7: uas.airmobility.v3.PutReserveAreaRequest.area:type_name -> uas.airmobility.v3.VoxelValueReserveArea
	0,  // 8: uas.airmobility.v3.PutReserveAreaResponse.error:type_name -> uas.airmobility.v3.ErrorCode
	18, // 9: uas.airmobility.v3.SelectObjectRequest.area:type_name -> generic.v3.SpatialFigure
	19, // 10: uas.airmobility.v3.SelectObjectRequest.type:type_name -> uas.airmobility.v3.ObjectType
	16, // 11: uas.airmobility.v3.SelectObjectResponse.object_id:type_name -> uas.airmobility.v3.SelectObjectResponse.FlyableArea
	18, // 12: uas.airmobility.v3.SelectAirspaceArrangementRequest.figure:type_name -> generic.v3.SpatialFigure
	22, // 13: uas.airmobility.v3.SelectAirspaceArrangementRequest.period:type_name -> generic.v3.Period
	23, // 14: uas.airmobility.v3.SelectAirspaceArrangementResponse.out_of_space:type_name -> generic.v3.SpatialIdentifications
	23, // 15: uas.airmobility.v3.SelectAirspaceArrangementResponse.flyable_space:type_name -> generic.v3.SpatialIdentifications
	0,  // 16: uas.airmobility.v3.SelectAirspaceArrangementResponse.error:type_name -> uas.airmobility.v3.ErrorCode
	23, // 17: uas.airmobility.v3.AirspaceArrangement.out_of_space:type_name -> generic.v3.SpatialIdentifications
	23, // 18: uas.airmobility.v3.AirspaceArrangement.flyable_space:type_name -> generic.v3.SpatialIdentifications
	23, // 19: uas.airmobility.v3.AirspaceArrangement.occupied_space:type_name -> generic.v3.SpatialIdentifications
	0,  // 20: uas.airmobility.v3.AirspaceArrangement.error:type_name -> uas.airmobility.v3.ErrorCode
	24, // 21: uas.airmobility.v3.SelectObjectResponse.FlyableArea.id:type_name -> generic.v3.SpatialIdentification
	25, // 22: uas.airmobility.v3.SelectObjectResponse.FlyableArea.current_weather:type_name -> uas.airmobility.v3.VoxelValueWeather.CurrentWeather
	26, // 23: uas.airmobility.v3.SelectObjectResponse.FlyableArea.forecast:type_name -> uas.airmobility.v3.VoxelValueWeatherForecast.Forecast
	27, // 24: uas.airmobility.v3.SelectObjectResponse.FlyableArea.mobile_network:type_name -> uas.airmobility.v3.VoxelValueWMobileNetwork
	1,  // 25: uas.airmobility.v3.AirMobilityAPI.PutObject:input_type -> uas.airmobility.v3.PutObjectRequest
	3,  // 26: uas.airmobility.v3.AirMobilityAPI.GetObject:input_type -> uas.airmobility.v3.GetObjectRequest
	4,  // 27: uas.airmobility.v3.AirMobilityAPI.DeleteObject:input_type -> uas.airmobility.v3.DeleteObjectRequest
	6,  // 28: uas.airmobility.v3.AirMobilityAPI.GetValue:input_type -> uas.airmobility.v3.GetValueRequest
	8,  // 29: uas.airmobility.v3.AirMobilityAPI.PutReserveArea:input_type -> uas.airmobility.v3.PutReserveAreaRequest
	13, // 30: uas.airmobility.v3.AirMobilityAPI.SelectAirspaceArrangement:input_type -> uas.airmobility.v3.SelectAirspaceArrangementRequest
	13, // 31: uas.airmobility.v3.AirMobilityAPI.SelectAirspaceArrangementStream:input_type -> uas.airmobility.v3.SelectAirspaceArrangementRequest
	2,  // 32: uas.airmobility.v3.AirMobilityAPI.PutObject:output_type -> uas.airmobility.v3.PutObjectResponse
	17, // 33: uas.airmobility.v3.AirMobilityAPI.GetObject:output_type -> uas.airmobility.v3.Object
	5,  // 34: uas.airmobility.v3.AirMobilityAPI.DeleteObject:output_type -> uas.airmobility.v3.DeleteObjectResponse
	20, // 35: uas.airmobility.v3.AirMobilityAPI.GetValue:output_type -> uas.airmobility.v3.Objects
	9,  // 36: uas.airmobility.v3.AirMobilityAPI.PutReserveArea:output_type -> uas.airmobility.v3.PutReserveAreaResponse
	14, // 37: uas.airmobility.v3.AirMobilityAPI.SelectAirspaceArrangement:output_type -> uas.airmobility.v3.SelectAirspaceArrangementResponse
	15, // 38: uas.airmobility.v3.AirMobilityAPI.SelectAirspaceArrangementStream:output_type -> uas.airmobility.v3.AirspaceArrangement
	32, // [32:39] is the sub-list for method output_type
	25, // [25:32] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_airmobility_sdsp_a_proto_init() }
func file_airmobility_sdsp_a_proto_init() {
	if File_airmobility_sdsp_a_proto != nil {
		return
	}
	file_airmobility_object_a_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_airmobility_sdsp_a_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airmobility_sdsp_a_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airmobility_sdsp_a_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airmobility_sdsp_a_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airmobility_sdsp_a_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airmobility_sdsp_a_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airmobility_sdsp_a_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airmobility_sdsp_a_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutReserveAreaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airmobility_sdsp_a_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutReserveAreaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airmobility_sdsp_a_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airmobility_sdsp_a_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airmobility_sdsp_a_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airmobility_sdsp_a_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectAirspaceArrangementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airmobility_sdsp_a_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectAirspaceArrangementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airmobility_sdsp_a_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AirspaceArrangement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_airmobility_sdsp_a_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectObjectResponse_FlyableArea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_airmobility_sdsp_a_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_airmobility_sdsp_a_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*AirspaceArrangement_OutOfSpace)(nil),
		(*AirspaceArrangement_FlyableSpace)(nil),
		(*AirspaceArrangement_OccupiedSpace)(nil),
		(*AirspaceArrangement_Error)(nil),
	}
	file_airmobility_sdsp_a_proto_msgTypes[15].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_airmobility_sdsp_a_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_airmobility_sdsp_a_proto_goTypes,
		DependencyIndexes: file_airmobility_sdsp_a_proto_depIdxs,
		EnumInfos:         file_airmobility_sdsp_a_proto_enumTypes,
		MessageInfos:      file_airmobility_sdsp_a_proto_msgTypes,
	}.Build()
	File_airmobility_sdsp_a_proto = out.File
	file_airmobility_sdsp_a_proto_rawDesc = nil
	file_airmobility_sdsp_a_proto_goTypes = nil
	file_airmobility_sdsp_a_proto_depIdxs = nil
}
