syntax = "proto3";

package uas.airmobility.v3 ;

option go_package = "github.com/ouranos-gex/ouranos-gex-api/proto_go/airmobility" ;

import "generic/sdsp_g.proto" ;
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";


enum ObjectType { // 地物の種類
    OBJECT_TYPE_UNSPECIFIED = 0 ;
    TERRAIN = 1 ; // 地形（バリア）
    BUILDING = 2 ; // 建物（バリア）
    RESTRICTED_AREA = 5 ; // 飛行制限空域（飛行空域）
    EMERGENCY_AREA = 6 ; // 緊急用務空域（飛行空域）
    RESERVE_AREA = 7 ; // 飛行計画空域（飛行空域）
    CHANNEL = 8 ;// 航路エリア（飛行空域）
    OVERLAY_AREA = 9 ; // 他システム（SDSPやUSS）で管理される空域

    WEATHER = 20 ; // 気象
    WEATHER_FORECAST = 21 ; // 気象予報
    MICROWAVE = 22 ; // 電波強度

    //GROUND_RISK = 40 ; // グランドリスク (v3.1.0みなおし)
    //AIR_RISK = 41 ; // 空間リスク (v3.1.0みなおし)
}


// オブジェクトの集合
message Objects {
    repeated Object objects = 10 ;
}

// オブジェクト
message Object { // terrain/building/restricted_area/emergency_area/reserve_area/channel/overlay_area/weather/weather_forecast/microwave/ground_risk/ari_riskはoneof
    // オブジェクト識別子
    int64 object_id = 1 ; // 

    //[oneof object] concrete_object
    oneof concrete_object { // 大量のボクセルが存在する場合はstreamで分割される
        ObjectTerrain terrain = 2 ; // [oneof object] 地形
        ObjectBuilding building = 3 ; // [oneof object] 建物
        ObjectRestrictedArea restricted_area = 4 ; // [oneof object] 飛行制限空域
        ObjectEmergencyArea emergency_area = 5 ; // [oneof object] 緊急用務空域
        ObjectReserveArea reserve_area = 6 ; // [oneof object] 飛行計画空域
        ObjectChannel channel = 7 ; // [oneof object] 航路エリア
        ObjectOverlayArea overlay_area = 8 ; // [oneof object] 他システム管理エリア

        ObjectWeather weather = 20 ; // [oneof object] 気象
        ObjectWeatherForecast weather_forecast = 21 ; // [oneof object] 気象予報
        ObjectMicrowave microwave = 22 ; // [oneof object] 通信ネットワーク

        //ObjectGroundRisk ground_risk = 40 ;// [oneof object] グランドリスク  (v3.1.0みなおし)
        //ObjectAirRisk ari_risk = 41 ;// [oneof object] 気空間リスク  (v3.1.0みなおし)
    }
}

message ObjectTerrain { // 地形オブジェクトの値
    // 情報ソース（情報生成源）
    string reference = 1 ; //

    // ボクセルの集合
    repeated VoxelValueTerrain voxel_values = 10 ; // 地形オブジェクトを構成するボクセル
}

message VoxelValueTerrain  {
    // 空間ID
    generic.v3.SpatialIdentification id = 1 ; //

    // 地表か否か
    bool vacant = 2 ; // 値（デフォルトfalse）。falseはidが存在しないことと等価

    // リスク指標値
    optional int32 risk_level = 10 ; // リスク指標値
}

message ObjectBuilding { // 建物オブジェクトの値
    // 情報ソース（情報生成源）
    string reference = 1 ; // 

    // ボクセルの集合
    repeated VoxelValueBuilding voxel_values = 10 ; // 建物オブジェクトのボクセル
}

message VoxelValueBuilding {
    // 空間ID
    generic.v3.SpatialIdentification id = 1 ; //

     // 建物か否か
    bool vacant = 2 ; //値（デフォルトfalse）。falseはidが存在しないことと等価

    // リスク指標値
    optional int32 risk_level = 10 ; // リスク指標値
}

message ObjectRestrictedArea { // 飛行制限空域（飛行制限区域）の値
    enum Type {
        TYPE_FREE = 0; // 制限なし（idが存在しないことと等価）
        TYPE_P = 1; // 飛行禁止
        TYPE_R = 2; // 飛行制限
        TYPE_K = 3; // 訓練等空域
        TYPE_N = 4; // 一時制限
    }

    // 情報ソース（情報生成源）　
    string reference = 1 ; //

    // 飛行制限空域（飛行制限区域）の種別
    Type type = 2 ; // 

     // ボクセルの集合
    repeated VoxelValueRestrictedArea voxel_values = 10 ;// 飛行制限空域のボクセル
}

message VoxelValueRestrictedArea {
    // 空間ID
    generic.v3.SpatialIdentification id = 1 ; // 

    // 飛行制限であるか否か
    bool vacant = 2 ; //値（デフォルトfalse）。falseはidなしと等価

    // リスク指標値
    // optional int32 risk_level = 10 ; // 飛行制限空域についてはリスク指標値を設定しない
}

message ObjectEmergencyArea { //緊急用務空域オブジェクトの値。
    // 情報ソース（情報生成源）
    string reference = 1 ; // 
    
    // ボクセルの集合
    repeated VoxelValueEmergencyArea voxel_values = 2 ; // 緊急用務空域ボクセル
}

message VoxelValueEmergencyArea {
    // 空間ID
    generic.v3.SpatialIdentification id = 1 ;  // 
    
    // 緊急用務空域であるか否か
    bool vacant = 2 ; //値（デフォルトfalse）。falseはidなしと等価

    // リスク指標値
    //optional int32 risk_level = 10 ; /// 緊急用務空域についてはリスク指標値を設定しない
}

message ObjectReserveArea { //飛行計画空域オブジェクトの値
    message ReserveTime {
        generic.v3.Period period = 1 ; // 予約時刻帯
        google.protobuf.Duration occupation = 2; //予約時間帯のうち占有予定時間（飛行時間）
        int64 reserve_id = 3 ; // PutReserveAreaRequestでは0。
    }
    
    // 予約者のuserID
    string owner_id = 1 ; // 

    // 予約時刻
    optional ReserveTime reservation_time = 2 ; // PutReserveAreaRequestでは必須。

    // ボクセルの集合
    repeated VoxelValueReserveArea voxel_values = 10 ; // 飛行計画空域ボクセル
}

message VoxelValueReserveArea {
    // 空間ID
    generic.v3.SpatialIdentification id = 1 ; //

    // 予約時間
    optional ObjectReserveArea.ReserveTime reservation_time = 2 ; // プロパティと重複する場合は本パラメータが優先

    // リスク指標値
    //optional int32 risk_level = 10 ; // // 予約空域についてはリスク指標値を設定しない
}


message ObjectChannel { //航路エリアオブジェクトの値
    // 航路管理元アドレス　
    generic.v3.ServerAddress owner_address = 1 ; // 

    // 航路識別子
    string channel_id = 2 ; // 
    
    // 他航路との接続点
    repeated VoxelValueJunction junction_values = 3 ; // 他航路との接続点のボクセル

    // ボクセルの集合
    repeated VoxelValueChannel channel_values = 10 ; // 飛行計画空域ボクセル
}

message VoxelValueChannel {
    // 空間ID
    generic.v3.SpatialIdentification id = 1 ; //
}

message VoxelValueJunction {
    // 空間ID
    generic.v3.SpatialIdentification id = 1 ; // 

    // 接続先の航路の列
    repeated string connected_channel_ids = 2 ; // 接続先の航路のchannel_id
}

message ObjectOverlayArea { //他システム管理エリアオブジェクトの値
    // 管理元アドレス
    generic.v3.ServerAddress owner_address = 1 ; // 

    // ボクセルの集合
    repeated VoxelValueOverlayArea voxel_values = 10 ; // 他システム管理エリアオブジェクトを構成するボクセ
}

message VoxelValueOverlayArea {
    // 空間ID
    generic.v3.SpatialIdentification id = 1 ; //
}

message ObjectWeather { // 気象オブジェクトの値
    // 情報ソース（情報生成源）
    string reference = 1 ; // 

    // ボクセルの集合
    repeated VoxelValueWeather voxel_values = 10 ; // 気象オブジェクトを構成するボクセル
}

message VoxelValueWeather {
    // 現況
    message CurrentWeather {
        google.protobuf.Timestamp start_time = 1; // 開始時刻
        google.protobuf.Timestamp end_time = 10; // 終了時刻
        optional float wind_direction = 2 ; // 風向(degree)
        optional float wind_speed = 3 ; // 風速(knot)
        optional float cloud_rate = 4 ; // 雲の割合(%)
        optional float temperature = 5 ; // 気温（°C）
        optional float dew_point = 6 ; // 露点温度（°C）
        optional float pressure = 7 ; // 気圧(hPa)
        optional float precipitation = 8 ; // 降水量（mm/h）
        optional float visibility = 9 ; // 視程(km)
        optional string gggg = 20 ; // 運航上重要な気象
    }

    // 空間ID
    generic.v3.SpatialIdentification id = 1 ; //

    // 現況情報
    CurrentWeather current_weather = 5 ; //

    // リスク指標値
    optional int32 risk_level = 10 ; // リスク指標値
}

message ObjectWeatherForecast { // 気象予報オブジェクトの値
     // 情報ソース（情報生成源）
    string reference = 1 ; //

    // ボクセルの集合
    repeated VoxelValueWeatherForecast voxel_values = 10 ; // 気象オブジェクトを構成するボクセル
}

message VoxelValueWeatherForecast {
    // 予報
    message Forecast {
        google.protobuf.Timestamp start_time = 1; // 開始時刻
        google.protobuf.Timestamp end_time = 10; // 終了時刻
        optional float wind_direction = 2 ; // 風向(degree)
        optional float wind_speed = 3 ; // 風速(knot)
        optional float cloud_rate = 4 ; // 雲の割合(%)
        optional float precipitation = 8 ; // 降水量（mm/h）
    }

    // 空間ID
    generic.v3.SpatialIdentification id = 1 ; //

    // 予防情報
    Forecast forecast = 2 ; //

    // リスク指標値
    optional int32 risk_level = 10 ; // リスク指標値
}

message ObjectMicrowave{ // 電波強度オブジェクト。mobile/wifiはoneof
    oneof Microwave {
        ObjectMobileNetwork mobile = 1 ;
        ObjectWifiNetwork wifi = 2 ;
    }
}

message ObjectMobileNetwork { // 携帯網
    // 情報ソース（情報生成源）
    optional string reference = 1 ; //
    
    // 通信事業者コード
    PublicLandMobileNetWork plmn_id = 2 ; //

    // ボクセルの集合
    repeated VoxelValueWMobileNetwork voxel_values = 10 ; // 携帯網オブジェクトを構成するボクセル

    message PublicLandMobileNetWork { // PLMN https://www.itu.int/rec/T-REC-Q.1001-198811-I/en
        int64 mobile_country_code = 1; // MCC https://www.itu.int/rec/T-REC-E.212-201609-I/en
        int64 mobile_network_code = 2; // MNC https://www.itu.int/rec/T-REC-E.212-201609-I/en
    }
}

message VoxelValueWMobileNetwork {
    // 空間ID
    generic.v3.SpatialIdentification id = 1 ; //

    // 電波強度
    float RSI = 2 ; // 電波強度(dB)
}

message ObjectWifiNetwork { // Wifi網
    // 情報ソース（情報生成源）
    optional string reference = 1 ; //

    // SSID
    string ssid = 2 ; // wifi SSID
    
    // ボクセルの集合
    repeated VoxelWifiNetwork voxel_values = 10 ; // Wifi網オブジェクトを構成するボクセル

}

message VoxelWifiNetwork {
    // 空間ID
    generic.v3.SpatialIdentification id = 1 ; //

    // 電波強度
    float RSI = 2 ; // 電波強度(dB)
}

/*
message ObjectGroundRisk { // グランドリスクオブジェクトの値  
    // 情報ソース（情報生成源）
    string reference = 1 ; // 　

    // ボクセルの集合
    repeated VoxelValueGroundRisk voxel_values = 10 ; // グランドリスク指標値。空間IDは2D表現（z/x/y）。
}

message VoxelValueGroundRisk {
    // 空間ID。2D表現（z/x/y）
    generic.v3.SpatialIdentification id = 1 ; // 2D表現（z/x/y）

    // 指標値
    float value = 2 ; // 0-100
}

message ObjectAirRisk { // グランドリスクオブジェクトの値
    // 情報ソース（情報生成源）
    string reference = 1 ; // 

    // ボクセルの集合
    repeated VoxelValueAirRisk voxel_values = 10 ; // 空間リスク指標値のボクセル
}

message VoxelValueAirRisk {
    // 空間ID
    generic.v3.SpatialIdentification id = 1 ; //
    
    // 指標値
    float value = 2 ; // 0-100
}
*/

message RiskLevels{
    // リスク指標値
    repeated RiskLevel risk_levels = 1 ; // リスク指標値。同一の空間IDはひとつのみ。ズームレベルはリクエストで与えた値。

    message RiskLevel{
        generic.v3.SpatialIdentification id = 1 ;
        int32 max = 2 ; // idの空間に存在するリスク指標の最大値
        int32 min = 3 ; // idの空間に存在するリスク指標の最小値
        float avarage = 4 ; // idの空間に存在するリスク指標の平均値
        repeated Source source_list = 10 ; // idの空間に存在するリスク指標値のリスト
    }

    message Source {
        // オブジェクト識別子
        int64 object_id = 1 ; // 
        int32 risk_level = 2 ; // リスク指標値    
    }
}